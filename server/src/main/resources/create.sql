CREATE TABLE IF NOT EXISTS LUMBER (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(40) NOT NULL
);

DROP TABLE TIMBER;
CREATE TABLE IF NOT EXISTS TIMBER (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  WOOD_TYPE VARCHAR(50) NOT NULL,
  FESTMETER DOUBLE NOT NULL,
  AMOUNT INT NOT NULL,
  LENGTH INT NOT NULL,
  QUALITY VARCHAR (10),
  DIAMETER INT NOT NULL,
  PRICE INT NOT NULL,
  LAST_EDITED TIMESTAMP
);

CREATE TABLE IF NOT EXISTS ORDERS (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORDERDATE TIMESTAMP NOT NULL,
  ISPAID BIT DEFAULT 0,
  DELETED BIT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS TASK (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORDERID INT NOT NULL,
  DESCRIPTION VARCHAR(50),
  FINISHING VARCHAR(15),
  WOOD_TYPE VARCHAR(10),
  QUALITY VARCHAR(10),
  SIZE INT NOT NULL,
  WIDTH INT NOT NULL,
  LENGTH INT NOT NULL,
  QUANTITY INT,
  PRODUCED_QUANTITY INT,
  DONE BIT DEFAULT 0,
  DELETED BIT DEFAULT 0,
  FOREIGN KEY (ORDERID) REFERENCES ORDERS(ID)
);

MERGE INTO ORDERS (ID, ORDERDATE, DELETED) KEY(ID) VALUES(1, '2017-12-03 08:00:00', 0);

MERGE INTO TASK (ID, ORDERID, DESCRIPTION, SIZE, WIDTH, LENGTH, QUANTITY, PRODUCED_QUANTITY, DONE) KEY(ID) VALUES(1, 1, 'for testing purpose only', 24, 48, 3000, 10, 10, 1);
MERGE INTO TASK (ID, ORDERID, DESCRIPTION, SIZE, WIDTH, LENGTH, QUANTITY, PRODUCED_QUANTITY, DONE) KEY(ID) VALUES(1, 1, 'another test', 28, 100, 300, 20, 20, 1);

INSERT INTO TIMBER(WOOD_TYPE, FESTMETER, AMOUNT, LENGTH, QUALITY, DIAMETER, PRICE, LAST_EDITED) VALUES
('Fichte', 21.28,7,3500, 'CX', 220,50,now()),
('Fichte', 21.28,7,3000, 'CX', 220,50,now()),
('Fichte', 21.28,5,2500, 'FX', 370,70,now()),
('Lose', 203.35,7,3500, 'FX', 240,80,now()),
('Polter',200.28,10,4000, 'FH', 220,100,now()),
('Fichte', 35.40,7,5000, 'FH', 300,50,now()),
('Polter', 123.20,7,1500, 'Bb', 220,50,now()),
('Lose', 55.89,17,4000, 'CX', 159,50,now()),
('Fichte', 21.28,19,5500, 'Bb', 220,50,now()),
('Fichte', 62.98,8,6000, 'CX', 180,200,now());